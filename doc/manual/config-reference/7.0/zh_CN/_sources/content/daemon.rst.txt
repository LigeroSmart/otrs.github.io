..
   |  WARNING: This documentation is auto-generated and all manual modification will be lost after
   |           the next update! For more information use this console command:
   |
   |           /opt/otrs/bin/otrs.Console.pl Dev::Tools::Config2RST --help

`Daemon`
========

`Daemon::PID::Path`
-------------------

If enabled the daemon will use this directory to create its PID files. Note: Please stop the daemon before any change and use this setting only if <$OTRSHome>/var/run/ can not be used.

This setting is not active by default.

Default value:

::

   --- /opt/otrs/var/run/


`Daemon` → `Log`
================

`Daemon::Log::DaysToKeep`
-------------------------

Defines the number of days to keep the daemon log files.

This setting is not active by default.

Default value:

::

   --- '1'

`Daemon::Log::RotationType`
---------------------------

Type of daemon log rotation to use: Choose 'OTRS' to let OTRS system to handle the file rotation, or choose 'External' to use a 3rd party rotation mechanism (i.e. logrotate). Note: External rotation mechanism requires its own and independent configuration.

This setting can not be deactivated.

Default value:

::

   --- otrs

`Daemon::Log::STDERR`
---------------------

If enabled the daemon will redirect the standard error stream to a log file.

This setting can not be deactivated.

Default value:

::

   --- '1'

`Daemon::Log::STDOUT`
---------------------

If enabled the daemon will redirect the standard output stream to a log file.

This setting can not be deactivated.

Default value:

::

   --- 0


`Daemon` → `ModuleRegistration`
===============================

`DaemonModules###SchedulerCronTaskManager`
------------------------------------------

The daemon registration for the scheduler cron task manager.

This setting can not be deactivated.

Default value:

::

   ---
   Module: Kernel::System::Daemon::DaemonModules::SchedulerCronTaskManager

`DaemonModules###SchedulerFutureTaskManager`
--------------------------------------------

The daemon registration for the scheduler future task manager.

This setting can not be deactivated.

Default value:

::

   ---
   Module: Kernel::System::Daemon::DaemonModules::SchedulerFutureTaskManager

`DaemonModules###SchedulerGenericAgentTaskManager`
--------------------------------------------------

The daemon registration for the scheduler generic agent task manager.

This setting can not be deactivated.

Default value:

::

   ---
   Module: Kernel::System::Daemon::DaemonModules::SchedulerGenericAgentTaskManager

`DaemonModules###SchedulerTaskWorker`
-------------------------------------

The daemon registration for the scheduler task worker.

This setting can not be deactivated.

Default value:

::

   ---
   Module: Kernel::System::Daemon::DaemonModules::SchedulerTaskWorker

`DaemonModules###SystemConfigurationSyncManager`
------------------------------------------------

The daemon registration for the configuration deployment sync manager.

This setting can not be deactivated.

Default value:

::

   ---
   Module: Kernel::System::Daemon::DaemonModules::SystemConfigurationSyncManager


`Daemon` → `SchedulerCronTaskManager` → `Task`
==============================================

`Daemon::SchedulerCronTaskManager::Task###AccessTokenDeleteExpired`
-------------------------------------------------------------------

Delete expired access-tokens.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::AccessToken
   Params:
   - --purge
   Schedule: 00 01 * * *
   TaskName: AccessTokenDeleteExpired

`Daemon::SchedulerCronTaskManager::Task###AccessTokenGenerateNewKey`
--------------------------------------------------------------------

Generate new access-token key, and from now on all new tokens will use this key, and also purges the older ones.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::AccessToken::Keys
   Params:
   - --generate
   - --keep
   - '3'
   Schedule: 00 04 * * *
   TaskName: AccessTokenGenerateNewKey

`Daemon::SchedulerCronTaskManager::Task###ArticleSearchIndexRebuild`
--------------------------------------------------------------------

Checks for articles that needs to be updated in the article search index.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::Ticket::FulltextIndexRebuildWorker
   Params:
   - --children
   - '4'
   - --limit
   - '20000'
   Schedule: '* * * * *'
   TaskName: ArticleSearchIndexRebuild

`Daemon::SchedulerCronTaskManager::Task###CommunicationLogDelete`
-----------------------------------------------------------------

Checks for communication log entries to be deleted.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::Log::CommunicationLog
   Params:
   - --purge
   Schedule: 00 03 * * *
   TaskName: CommunicationLogDelete

`Daemon::SchedulerCronTaskManager::Task###ConfigurationDeploymentCleanup`
-------------------------------------------------------------------------

Removes old system configuration deployments (Sunday mornings).

This setting can not be deactivated.

Default value:

::

   ---
   Function: ConfigurationDeployCleanup
   MaximumParallelInstances: '1'
   Module: Kernel::System::SysConfig
   Params: []
   Schedule: 40 0 * * 0
   TaskName: ConfigurationDeploymentCleanup

`Daemon::SchedulerCronTaskManager::Task###ContractCheck`
--------------------------------------------------------

Checks the contract status of the system.

This setting can not be deactivated.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::SystemContract::ContractStatusCheck
   Params: []
   Schedule: '*/5 * * * *'
   TaskName: ContractCheck

`Daemon::SchedulerCronTaskManager::Task###CoreCacheCleanup`
-----------------------------------------------------------

Delete expired cache from core modules.

Default value:

::

   ---
   Function: CleanUp
   MaximumParallelInstances: '1'
   Module: Kernel::System::Cache
   Params:
   - Expired
   - '1'
   Schedule: 20 0 * * 0
   TaskName: CoreCacheCleanup

`Daemon::SchedulerCronTaskManager::Task###Custom1`
--------------------------------------------------

Executes a custom command or module. Note: if module is used, function is required.

This setting is not active by default.

Default value:

::

   ---
   Function: ''
   MaximumParallelInstances: '1'
   Module: ''
   Params: []
   Schedule: '* * * * *'
   TaskName: Custom1

`Daemon::SchedulerCronTaskManager::Task###Custom2`
--------------------------------------------------

Executes a custom command or module. Note: if module is used, function is required.

This setting is not active by default.

Default value:

::

   ---
   Function: ''
   MaximumParallelInstances: '1'
   Module: ''
   Params: []
   Schedule: '* * * * *'
   TaskName: Custom2

`Daemon::SchedulerCronTaskManager::Task###Custom3`
--------------------------------------------------

Executes a custom command or module. Note: if module is used, function is required.

This setting is not active by default.

Default value:

::

   ---
   Function: ''
   MaximumParallelInstances: '1'
   Module: ''
   Params: []
   Schedule: '* * * * *'
   TaskName: Custom3

`Daemon::SchedulerCronTaskManager::Task###Custom4`
--------------------------------------------------

Executes a custom command or module. Note: if module is used, function is required.

This setting is not active by default.

Default value:

::

   ---
   Function: ''
   MaximumParallelInstances: '1'
   Module: ''
   Params: []
   Schedule: '* * * * *'
   TaskName: Custom4

`Daemon::SchedulerCronTaskManager::Task###Custom5`
--------------------------------------------------

Executes a custom command or module. Note: if module is used, function is required.

This setting is not active by default.

Default value:

::

   ---
   Function: ''
   MaximumParallelInstances: '1'
   Module: ''
   Params: []
   Schedule: '* * * * *'
   TaskName: Custom5

`Daemon::SchedulerCronTaskManager::Task###Custom6`
--------------------------------------------------

Executes a custom command or module. Note: if module is used, function is required.

This setting is not active by default.

Default value:

::

   ---
   Function: ''
   MaximumParallelInstances: '1'
   Module: ''
   Params: []
   Schedule: '* * * * *'
   TaskName: Custom6

`Daemon::SchedulerCronTaskManager::Task###Custom7`
--------------------------------------------------

Executes a custom command or module. Note: if module is used, function is required.

This setting is not active by default.

Default value:

::

   ---
   Function: ''
   MaximumParallelInstances: '1'
   Module: ''
   Params: []
   Schedule: '* * * * *'
   TaskName: Custom7

`Daemon::SchedulerCronTaskManager::Task###Custom8`
--------------------------------------------------

Executes a custom command or module. Note: if module is used, function is required.

This setting is not active by default.

Default value:

::

   ---
   Function: ''
   MaximumParallelInstances: '1'
   Module: ''
   Params: []
   Schedule: '* * * * *'
   TaskName: Custom8

`Daemon::SchedulerCronTaskManager::Task###Custom9`
--------------------------------------------------

Executes a custom command or module. Note: if module is used, function is required.

This setting is not active by default.

Default value:

::

   ---
   Function: ''
   MaximumParallelInstances: '1'
   Module: ''
   Params: []
   Schedule: '* * * * *'
   TaskName: Custom9

`Daemon::SchedulerCronTaskManager::Task###EscalationCheck`
----------------------------------------------------------

Triggers ticket escalation events and notification events for escalation.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::Ticket::EscalationCheck
   Params: []
   Schedule: '*/5 * * * *'
   TaskName: EscalationCheck

`Daemon::SchedulerCronTaskManager::Task###FetchMail`
----------------------------------------------------

Fetch emails via fetchmail.

This setting is not active by default.

Default value:

::

   ---
   Function: Fetch
   MaximumParallelInstances: '1'
   Module: Kernel::System::FetchMail
   Params: []
   Schedule: '*/5 * * * *'
   TaskName: FetchMail

`Daemon::SchedulerCronTaskManager::Task###FetchMailSSL`
-------------------------------------------------------

Fetch emails via fetchmail (using SSL).

This setting is not active by default.

Default value:

::

   ---
   Function: Fetch
   MaximumParallelInstances: '1'
   Module: Kernel::System::FetchMail
   Params:
   - SSL
   - '1'
   Schedule: '*/5 * * * *'
   TaskName: FetchMailSSL

`Daemon::SchedulerCronTaskManager::Task###GenerateDashboardStats`
-----------------------------------------------------------------

Generate dashboard statistics.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::Stats::Dashboard::Generate
   Params: []
   Schedule: 5 * * * *
   TaskName: GenerateDashboardStats

`Daemon::SchedulerCronTaskManager::Task###GenericAgentFile1`
------------------------------------------------------------

Run file based generic agent jobs (Note: module name needs to be specified in -configuration-module param e.g. "Kernel::System::GenericAgent").

This setting is not active by default.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::GenericAgent::Run
   Params:
   - --configuration-module
   - <ModuleName>
   Schedule: '*/20 * * * *'
   TaskName: GenericAgentFile1

`Daemon::SchedulerCronTaskManager::Task###GenericAgentFile2`
------------------------------------------------------------

Run file based generic agent jobs (Note: module name needs to be specified in -configuration-module param e.g. "Kernel::System::GenericAgent").

This setting is not active by default.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::GenericAgent::Run
   Params:
   - --configuration-module
   - <ModuleName>
   Schedule: '*/20 * * * *'
   TaskName: GenericAgentFile2

`Daemon::SchedulerCronTaskManager::Task###GenericAgentFile3`
------------------------------------------------------------

Run file based generic agent jobs (Note: module name needs to be specified in -configuration-module param e.g. "Kernel::System::GenericAgent").

This setting is not active by default.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::GenericAgent::Run
   Params:
   - --configuration-module
   - <ModuleName>
   Schedule: '*/20 * * * *'
   TaskName: GenericAgentFile3

`Daemon::SchedulerCronTaskManager::Task###GenericAgentFile4`
------------------------------------------------------------

Run file based generic agent jobs (Note: module name needs to be specified in -configuration-module param e.g. "Kernel::System::GenericAgent").

This setting is not active by default.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::GenericAgent::Run
   Params:
   - --configuration-module
   - <ModuleName>
   Schedule: '*/20 * * * *'
   TaskName: GenericAgentFile4

`Daemon::SchedulerCronTaskManager::Task###GenericAgentFile5`
------------------------------------------------------------

Run file based generic agent jobs (Note: module name needs to be specified in -configuration-module param e.g. "Kernel::System::GenericAgent").

This setting is not active by default.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::GenericAgent::Run
   Params:
   - --configuration-module
   - <ModuleName>
   Schedule: '*/20 * * * *'
   TaskName: GenericAgentFile5

`Daemon::SchedulerCronTaskManager::Task###GeneticInterfaceDebugLogCleanup`
--------------------------------------------------------------------------

Renew existing SMIME certificates from customer backend. Note: SMIME and SMIME::FetchFromCustomer needs to be enabled in SysConfig and customer backend needs to be configured to fetch UserSMIMECertificate attribute.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::GenericInterface::DebugLog::Cleanup
   Params:
   - --created-before-days
   - '14'
   Schedule: 02 03 * * *
   TaskName: GeneticInterfaceDebugLogCleanup

`Daemon::SchedulerCronTaskManager::Task###IndexMaintenance`
-----------------------------------------------------------

Verify indices structure and index missing documents.

This setting can not be deactivated.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::DocumentSearch::IndexWorker
   Params:
   - --verify-index
   Schedule: '*/1 * * * *'
   TaskName: IndexMaintenance

`Daemon::SchedulerCronTaskManager::Task###LoaderCacheDelete`
------------------------------------------------------------

Delete expired loader cache weekly (Sunday mornings).

Default value:

::

   ---
   Function: CacheDelete
   MaximumParallelInstances: '1'
   Module: Kernel::System::Loader
   Params: []
   Schedule: 30 0 * * 0
   TaskName: LoaderCacheDelete

`Daemon::SchedulerCronTaskManager::Task###MailAccountFetch`
-----------------------------------------------------------

Fetch incoming emails from configured mail accounts.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::PostMaster::MailAccountFetch
   Params: []
   Schedule: '*/10 * * * *'
   TaskName: MailAccountFetch

`Daemon::SchedulerCronTaskManager::Task###MailQueueSend`
--------------------------------------------------------

Checks for queued outgoing emails to be sent.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::Email::MailQueue
   Params:
   - --send
   Schedule: '* * * * *'
   TaskName: MailQueueSend

`Daemon::SchedulerCronTaskManager::Task###NotificationViewDeleteExpired`
------------------------------------------------------------------------

Delete expired notifications from Notification View screen.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::NotificationView::DeleteExpired
   Params:
   - --user-type
   - Customer
   Schedule: 00 02 * * *
   TaskName: NotificationViewDeleteExpired

`Daemon::SchedulerCronTaskManager::Task###RegistrationUpdateSend`
-----------------------------------------------------------------

Sends registration information to OTRS group.

This setting can not be deactivated.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::Registration::UpdateSend
   Params: []
   Schedule: 30 * * * *
   TaskName: RegistrationUpdateSend

`Daemon::SchedulerCronTaskManager::Task###RemoveClosedChats`
------------------------------------------------------------

Remove closed chats older than ChatEngine::ChatTTL.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::Chat::Cleanup::Closed
   Params: []
   Schedule: 7 23 * * *
   TaskName: RemoveClosedChats

`Daemon::SchedulerCronTaskManager::Task###RemoveOldChats`
---------------------------------------------------------

Remove old chats.

This setting is not active by default.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::Chat::Cleanup::Old
   Params: []
   Schedule: 15 3 * * 0
   TaskName: RemoveClosedChats

`Daemon::SchedulerCronTaskManager::Task###RenewCustomerSMIMECertificates`
-------------------------------------------------------------------------

Renew existing SMIME certificates from customer backend. Note: SMIME and SMIME::FetchFromCustomer needs to be enabled in SysConfig and customer backend needs to be configured to fetch UserSMIMECertificate attribute.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::SMIME::CustomerCertificate::Renew
   Params: []
   Schedule: 02 02 * * *
   TaskName: RenewCustomerSMIMECertificates

`Daemon::SchedulerCronTaskManager::Task###SessionDeleteExpired`
---------------------------------------------------------------

Delete expired sessions.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::Session::DeleteExpired
   Params: []
   Schedule: 55 */2 * * *
   TaskName: SessionDeleteExpired

`Daemon::SchedulerCronTaskManager::Task###SpoolMailsReprocess`
--------------------------------------------------------------

Reprocess mails from spool directory that could not be imported in the first place.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::PostMaster::SpoolMailsReprocess
   Params: []
   Schedule: 10 0 * * *
   TaskName: SpoolMailsReprocess

`Daemon::SchedulerCronTaskManager::Task###StatsReportsGenerateCron`
-------------------------------------------------------------------

Generate statistics reports.

This setting can not be deactivated.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::Stats::Reports::GenerateCron
   Params: []
   Schedule: '*/10 * * * *'
   TaskName: StatsReportsGenerateCron

`Daemon::SchedulerCronTaskManager::Task###SupportDataCollectAsynchronous`
-------------------------------------------------------------------------

Collect support data for asynchronous plug-in modules.

This setting can not be deactivated.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::SupportData::CollectAsynchronous
   Params: []
   Schedule: 1 * * * *
   TaskName: SupportDataCollectAsynchronous

`Daemon::SchedulerCronTaskManager::Task###TicketAcceleratorRebuild`
-------------------------------------------------------------------

Rebuild the ticket index for AgentTicketQueue.

Default value:

::

   ---
   Function: TicketAcceleratorRebuild
   MaximumParallelInstances: '1'
   Module: Kernel::System::Ticket
   Params: []
   Schedule: 01 01 * * *
   TaskName: TicketAcceleratorRebuild

`Daemon::SchedulerCronTaskManager::Task###TicketDraftDeleteExpired`
-------------------------------------------------------------------

Delete expired ticket draft entries.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::FormDraft::Delete
   Params:
   - --object-type
   - Ticket
   - --expired
   Schedule: 55 * * * *
   TaskName: TicketDraftDeleteExpired

`Daemon::SchedulerCronTaskManager::Task###TicketNumberCounterCleanup`
---------------------------------------------------------------------

Removes old ticket number counters (each 10 minutes).

This setting can not be deactivated.

Default value:

::

   ---
   Function: TicketNumberCounterCleanup
   MaximumParallelInstances: '1'
   Module: Kernel::System::Ticket::Number::AutoIncrement
   Params: []
   Schedule: '*/10 * * * *'
   TaskName: TicketNumberCounterCleanup

`Daemon::SchedulerCronTaskManager::Task###TicketPendingCheck`
-------------------------------------------------------------

Process pending tickets.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::Ticket::PendingCheck
   Params: []
   Schedule: 45 */2 * * *
   TaskName: TicketPendingCheck

`Daemon::SchedulerCronTaskManager::Task###TicketUnlockTimeout`
--------------------------------------------------------------

Unlock tickets that are past their unlock timeout.

Default value:

::

   ---
   Function: Execute
   MaximumParallelInstances: '1'
   Module: Kernel::System::Console::Command::Maint::Ticket::UnlockTimeout
   Params: []
   Schedule: 35 * * * *
   TaskName: TicketUnlockTimeout

`Daemon::SchedulerCronTaskManager::Task###WebUploadCacheCleanup`
----------------------------------------------------------------

Delete expired upload cache hourly.

Default value:

::

   ---
   Function: FormIDCleanUp
   MaximumParallelInstances: '1'
   Module: Kernel::System::Web::UploadCache
   Params: []
   Schedule: 46 * * * *
   TaskName: WebUploadCacheCleanup


`Daemon` → `SchedulerGenericAgentTaskManager`
=============================================

`Daemon::SchedulerGenericAgentTaskManager::SleepTime`
-----------------------------------------------------

Defines a sleep time in microseconds between tickets while they are been processed by a job.

This setting can not be deactivated.

Default value:

::

   --- 0

`Daemon::SchedulerGenericAgentTaskManager::TicketLimit`
-------------------------------------------------------

Defines the maximum number of affected tickets per job.

This setting can not be deactivated.

Default value:

::

   --- '4000'


`Daemon` → `SchedulerGenericInterfaceTaskManager`
=================================================

`Daemon::SchedulerGenericInterfaceTaskManager::FutureTaskTimeDiff`
------------------------------------------------------------------

Defines the default the number of seconds (from current time) to re-schedule a generic interface failed task.

This setting can not be deactivated.

Default value:

::

   --- '300'


`Daemon` → `SchedulerTaskWorker`
================================

`Daemon::SchedulerTaskWorker::MaximumWorkers`
---------------------------------------------

Defines the maximum number of tasks to be executed as the same time. Note: Options below 5 might result in a slow processing of the tasks and are not recommended.

This setting can not be deactivated.

Default value:

::

   --- '5'

`Daemon::SchedulerTaskWorker::NotificationRecipientEmail`
---------------------------------------------------------

Specifies the email addresses to get notification messages from scheduler tasks.

This setting can not be deactivated.

Default value:

::

   --- root@localhost


